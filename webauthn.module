<?php

/**
 * @file
 * This is the WebAuthn module for password-less authentication.
 */

declare(strict_types=1);

use Drupal\Core\Entity\EntityTypeInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Render\Element;
use Drupal\webauthn\Form\PublicKeyCredentialCreationForm;

/**
 * Implements hook_entity_type_build().
 *
 * Use module configuration to determine if replace the registration form or
 * add a custom operation to the user entity.
 */
function webauthn_entity_type_build(&$entity_types) {
  if (!isset($entity_types['user'])) {
    return;
  }

  /** @var \Drupal\Core\Entity\EntityTypeInterface $user_type */
  $user_type = $entity_types['user'];
  $config = \Drupal::config('webauthn.settings');
  // By default, create a new operation for registering.
  $operation = 'webauthn';

  if (!empty($config->get('replace_registration_form'))) {
    $operation = 'register';
  }

  $user_type->setFormClass($operation, PublicKeyCredentialCreationForm::class);
}

/**
 * Implements hook_entity_base_field_info_alter().
 *
 * Override default mail constraint for user.
 *
 * @see \Drupal\webauthn\Plugin\Validation\Constraint\UserMailRequired
 */
function webauthn_entity_base_field_info_alter(&$fields, EntityTypeInterface $entity_type) {
  /** @var \Drupal\Core\Field\FieldDefinitionInterface[] $fields */
  if (!empty($fields['mail']) && $entity_type->id() === 'user') {
    $constraints = $fields['mail']->getConstraints();
    unset($constraints['UserMailRequired']);
    $constraints += [
      'WebAuthnUserMailRequired' => [],
    ];
    $fields['mail']->setConstraints($constraints);
  }
}

/**
 * Implements hook_form_alter().
 *
 * @todo Find a better way to cleanup the form.
 */
function webauthn_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  if ($form_id === 'user_webauthn_form'
    || ($form_id === 'user_register_form'
      && (bool) \Drupal::config('webauthn.settings')
        ->get('replace_registration_form') === TRUE)) {
    if (isset($form['contact'])) {
      $form['contact']['#access'] = FALSE;
    }

    if (isset($form['timezone'])) {
      $form['timezone']['#access'] = FALSE;
    }
  }
}

/**
 * Prepares variables for Public Key Credential Source templates.
 *
 * Default template: public_key_credential_source.html.twig.
 *
 * @param array $variables
 *   An associative array containing:
 *   - elements: An associative array containing the user information and any
 *   - attributes: HTML attributes for the containing element.
 */
function template_preprocess_public_key_credential_source(array &$variables) {
  /** @var \Drupal\webauthn\Entity\PublicKeyCredentialSource $public_key_credential_source */
  $public_key_credential_source = $variables['elements']['#public_key_credential_source'];

  foreach (Element::children($variables['elements']) as $key) {
    $variables['content'][$key] = $variables['elements'][$key];
  }
}
